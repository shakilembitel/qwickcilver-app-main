<script>
  async function getCurrentDateTime() {
    const now = new Date();

    // Convert to IST by adding 5 hours and 30 minutes
    now.setTime(now.getTime() + (5 * 60 + 30) * 60 * 1000);

    const year = now.getUTCFullYear();
    const month = String(now.getUTCMonth() + 1).padStart(2, '0');
    const day = String(now.getUTCDate()).padStart(2, '0');
    const hours = String(now.getUTCHours()).padStart(2, '0');
    const minutes = String(now.getUTCMinutes()).padStart(2, '0');
    const seconds = String(now.getUTCSeconds()).padStart(2, '0');

    const dateTimeString = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;

    const dateTimeRegex = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$/;
    if (!dateTimeRegex.test(dateTimeString)) {
      console.error('Invalid dateTimeString format:', dateTimeString);
      return null;
    }

    return dateTimeString;
  }
  const getAuthToken = async (TransactionId) => {
    let DateAtServer = await getCurrentDateTime();
    try {
      const response = await fetch(POST_Authorise, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          DateAtClient: DateAtServer,
          TransactionId,
        },
        body: JSON.stringify({
          UserName: 'PC.MANAGER',
          Password: 'WELCOME',
          TerminalId: 'PC Chandra-Online-POS2',
        }),
      });

      if (!response.ok) {
        throwErrorMessage(response.status);
      }

      const data = await response.json();

      if (data?.ResponseMessage === 'Transaction successful.') {
        return data;
      } else {
        console.error('Transaction was not successful:', data.ResponseMessage);
        return null;
      }
    } catch (error) {
      console.error('Error fetching auth token:', error);
      return null;
    }
  };
</script>
